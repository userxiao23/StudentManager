<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.dao.StudentDao">

    <resultMap id="BaseResultMap" type="com.springmvc.entity.Student">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="sn" property="sn" jdbcType="VARCHAR"/>
        <result column="clazzId" property="clazzId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="student_list">
        id,sn,clazzId,username,password,sex,photo,remark
    </sql>

    <select id="findStudent" resultMap="BaseResultMap">
        select
        <include refid="student_list"/>
        from student
        where username = #{username}
    </select>

    <select id="getTotal" resultType="Integer" parameterType="Map">
        select count(id)
        from student
        <where>
            <if test="username != null and username != ''">
                username like concat('%',#{username},'%')
            </if>
            <if test="clazzId != null and clazzId != ''">
                and clazzId = #{clazzId}
            </if>
        </where>
    </select>

    <select id="getStudentList" resultMap="BaseResultMap" parameterType="Map">
        select
        <include refid="student_list"/>
        from student
        <where>
            <if test="username != null and username != ''">
                username like concat('%',#{username},'%')
            </if>
            <if test="clazzId != null and clazzId != ''">
                and clazzId = #{clazzId}
            </if>
        </where>
        limit #{offset}, #{pageSize}
    </select>

    <update id="editStudent" parameterType="com.springmvc.entity.Student">
        update student
        set username = #{username},
        password = #{password},
        sn = #{sn},
        clazzId = #{clazzId},
        sex = #{sex},
        photo = #{photo},
        remark = #{remark}
        where id = #{id}
    </update>

    <update id="deleteStudentById">
        delete from student
        where id in
        <foreach collection="ids" open="(" close=");" item="id" separator=",">
            #{id}
        </foreach>
    </update>

    <update id="addStudent" parameterType="com.springmvc.entity.Student">
        insert into student(id, username, password,sn,clazzId,sex,photo,remark)
        value (null,#{username},#{password},#{sn},#{clazzId},#{sex},#{photo},#{remark})
    </update>

</mapper>